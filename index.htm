<!DOCTYPE html>

<html>

<head>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<title>MarkdownByRegEx</title>

<style>
	html, body {
		height: 100%;
		font-family:Arial, Helvetica, sans-serif;
	}
	.Display {
		width: 95%;
		height: 100%;
		border: 1px solid black;
	}
	.DisplayArea {
		width: 100%;
		height: 40%;
        margin-bottom: 2em;
	}
	.DisplayDiv {
		float: left;
		width: 49%;
		height: 100%;
	}
	.DisplayResult {
		width: 95%;
		min-height: 100%;
		border: 1px solid black;
		padding: 0.5em;
	}
    #ParsedResult {
        margin-bottom: 2em;
    }
    .Hidden {
        display: none;
    }
</style>

</head>

<body>

<script src="jquery-min.js"></script>

<div class="DisplayArea" >
    <div class="DisplayDiv" >
        <strong>Source Markdown</strong><br />
        <textarea id="SourceText" class="Display SelectSourceListener ExitSourceListener" ></textarea>
        <textarea id="ExampleText" class="Hidden" >
This is a test of a multiline paragraph with various features, including:
Preserve ampersands: The less-than character is &amp;lt;
\* Precede with a backslash to preserve characters (such as the asterisk at the beginning of this line, to avoid processing as a bullet)
A backslash before a hyphen is a non-breaking hyphen: Alabama\-Alaska\-Arizona\-Arkansas
A backslash before a space is a non-breaking space: Newfoundland\ and\ Labrador
Show hyperlinks, both [without a scheme](about.joederose.us) and [with a scheme](http://about.joederose.us)
Show images: ![JD logo](http://about.joederose.us/files/JD%20-%20Small.jpg)
Show inline abbreviations (hover for full text): ^[HTML](HyperText Markup Language)
Transform 'single' and "double" quotation marks
Preserve <Angle Brackets>
Show _italic_ text
Show **bold** text
Show ~~strikethrough~~ text
Show `<code>code snippets</code>`  
Allow a continuation marker at the end of a line so it does not _
get broken into multiple lines
Force breaking into multiple lines ## using the double-#
Show double hyphens as en-dashes: --

# Header 1 (With Pound Sign)

## Header 2 (With Pound Signs)

### Header 3 (With Pound Signs)

#### Header 4 (With Pound Signs)

##### Header 5 (With Pound Signs)

###### Header 6 (With Pound Signs)

Header 1 (With Equals Signs)
===

Header 2 (With Hyphens)
---

> Indented
> paragraph
     
> with 
> multiple (sometimes interrupted)

> lines

  Non-blockquote line

> Single indented line


```
several
 lines
  of
   preformatted
    code
     framed
      by
       backticks

   
   
        (after 3 blank lines)
```

    several
     lines
      of
       preformatted
        code
         preceded
          by
           spaces


Horizontal lines with hyphens, asterisks, and underscores:

-  -  -

* * *

___

A table (this example page includes no CSS styling for the lines between cells):

+--------------+--------------+--------------+
| Table Head A | Table Head B | Table Head C |
+--------------+--------------+--------------+
| Item A1      | Item B1      | Item C1      |
| Item A3      | Item B2      | Item C2      |
+--------------+--------------+--------------+

Ordered and unordered lists:

* Test A
* Test B  
  (with a line break)
* Test C
  1. Test C1
  1. Test C2
  1. Test C3
    * Test C3a
      1. Test C3a(i)
      1. Test C3a(ii)
    * Test C3b
* Test D
        </textarea>
    </div>
    <div class="DisplayDiv" >
        <p>
            The GitHub repository for this utility is at:<br />
            <a target="_blank" href="https://github.com/JoeDeRose/MarkdownByRegEx">https://github.com/JoeDeRose/MarkdownByRegEx</a>
        </p>
    </div>
</div>

<p>
    <input id="ParseTextButton" class="ParseTextListener" type="button" value="Parse as Markdown">
    (If the Source Markdown box is empty, this will insert and parse a complex example.)
</p>

<div class="DisplayArea" >
    <div class="DisplayDiv" >
        <strong>Result HTML</strong><br />
        <textarea id="ParsedSource" class="DisplayResult" ></textarea>
    </div>
    <div class="DisplayDiv" >
        <strong>Result as Displayed (without any non-native styling)</strong><br />
        <div id="ParsedResult" class="DisplayResult" ></div>
    </div>
</div>



<script src="ParseMarkdown.js"></script>
<script>
function ProcessContent() {
	Content = $( "#SourceText" ).val();
    Content = ParseMarkdown( Content );
	$( "#ParsedSource" ).html( Content );
	$( "#ParsedResult" ).html( Content );
}

$( "body" ).on(
	"click",
		// Options include standard events (change, keydown, keypress, keyup, mouseover, mouseout, click, dblclick, submit) as well as custom events.
		// (Note that "keypress" is only triggered by character keys, while "keydown" is also triggered by modifier keys such as SHIFT, CTRL, and ALT.)
		// Full list is at http://api.jquery.com/category/events/
	".ParseTextListener",
	function() {
        if ( $( "#SourceText" ).val() == "" ) {
            $( "#SourceText" ).val( $( "#ExampleText" ).val() );
        }
		ProcessContent();
	}
);

$( "body" ).on(
	"click",
		// Options include standard events (change, keydown, keypress, keyup, mouseover, mouseout, click, dblclick, submit) as well as custom events.
		// (Note that "keypress" is only triggered by character keys, while "keydown" is also triggered by modifier keys such as SHIFT, CTRL, and ALT.)
		// Full list is at http://api.jquery.com/category/events/
	".SelectSourceListener",
	function() {
        $( "#SourceText" ).select();
	}
);

$( "body" ).on(
	"blur",
		// Options include standard events (change, keydown, keypress, keyup, mouseover, mouseout, click, dblclick, submit) as well as custom events.
		// (Note that "keypress" is only triggered by character keys, while "keydown" is also triggered by modifier keys such as SHIFT, CTRL, and ALT.)
		// Full list is at http://api.jquery.com/category/events/
	".ExitSourceListener",
	function() {
		ProcessContent();
	}
);

$( "#SourceText" ).focus();
ProcessContent();

</script>

</body>
</html>
